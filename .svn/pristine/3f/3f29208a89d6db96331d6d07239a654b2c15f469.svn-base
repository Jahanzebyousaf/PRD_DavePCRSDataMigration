<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2021 9:17:15 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC371"
  DTS:CreatorName="STGROUP\admin.bleung"
  DTS:DTSID="{7B943226-E113-424F-A5CE-5F93A51B4644}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.166"
  DTS:LocaleID="4105"
  DTS:ObjectName="3  ContractbyContract_VoidAPI"
  DTS:PackageType="5"
  DTS:VersionBuild="148"
  DTS:VersionGUID="{1662B42C-9B31-4C6A-867C-93A0D4ECB5D9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E51FCD9-F078-4377-A094-0A2FAC7D895A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ContractsJSON">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61827353-07D0-4378-BB66-78586E0F0474}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EachContracts">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C960659A-695E-4691-B51D-D906E35BB5EC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6339987B-3CE2-4CC6-A074-142233334CE3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SuccessMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get New Voided Contract List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D4CDE329-9F51-4FEF-B011-143FBBBF63DF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get New Voided Contract List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C8E533B4-207F-4879-B88A-1767C1761BAE}"
          SQLTask:SqlStatementSource="DELETE api&#xA;FROM dbo.Contract_Delta CD&#xA;&#x9;JOIN dbo.VoidContracts_APICall api ON api.ContractNumber = CD.ContractNumber&#xA;WHERE CD.Trans2PCRS=0 AND CD.ContractStatus='V';&#xA;&#xA;GO&#xA;DELETE api&#xA;FROM dbo.Contract_Header CH&#xA;&#x9;&#x9;JOIN dbo.Contract_Delta CD ON CH.ContractNumber=CD.ContractNumber&#xA;&#x9;&#x9;JOIN dbo.VoidContracts_APICall api ON api.ContractNumber = CH.ContractNumber&#xA;WHERE CH.ContractStatusCode&lt;&gt;CD.ContractStatus&#xA;AND CH.ContractStatusCode&lt;&gt;'E'&#xA;AND api.IsVoid=1;&#xA;&#xA;GO&#xA;&#xA;INSERT INTO dbo.VoidContracts_APICall&#xA;(&#xA;    ContractNumber,&#xA;    ProgramType,&#xA;    IsVoid,&#xA;    ErrorMessage,&#xA;    ModifiedDate&#xA;)&#xA;SELECT CD.ContractNumber,CD.ProgramType,&#xA;&#x9;'0' AS [IsVoid],&#xA;&#x9;NULL AS [ErrorMessage],&#xA;&#x9;NULL AS [ModifiedDate]&#xA;FROM dbo.Contract_Delta CD &#xA;&#x9;LEFT JOIN [dbo].[VoidContracts_APICall] VC ON VC.ContractNumber = CD.ContractNumber&#xA;WHERE CD.ContractStatus='V'&#xA;&#x9;AND VC.ContractNumber IS NULL;&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Void Contracts"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{94AA8275-ABB1-47E3-959E-91129C939776}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Void Contracts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C8E533B4-207F-4879-B88A-1767C1761BAE}"
          SQLTask:SqlStatementSource="SELECT contractnumber&#xA;FROM [dbo].[VoidContracts_APICall]&#xA;WHERE isvoid=0 &#xA;AND ErrorMessage IS NULL&#xA;--AND ContractNumber IN ()&#xA;ORDER BY ContractNumber DESC;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ContractsJSON" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Void each Contracts"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{5EE8A834-924D-4692-A2EA-7F245740A2B6}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Void each Contracts">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{8FBA5E01-230B-4B9E-99D9-96804AD07BF4}"
        DTS:ObjectName="{8FBA5E01-230B-4B9E-99D9-96804AD07BF4}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::ContractsJSON" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Void each Contracts\Input Error Message"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{A8F5AC3F-2BD5-42D2-A814-54EE16835460}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Input Error Message"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C8E533B4-207F-4879-B88A-1767C1761BAE}"
              SQLTask:SqlStatementSource="UPDATE [dbo].[VoidContracts_APICall]&#xA;SET ErrorMessage=?, &#xA;       ModifiedDate = getdate()&#xA;WHERE [ContractNumber]=?;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EachContracts"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::OutputMessage"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Void each Contracts\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{458EEF7A-F37E-4049-9698-BE4DBCC5BCE6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4437e31a0ed1446fb2de8033b68706ba"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::EachContracts"
              ReadWriteVariables="User::OutputMessage,User::SuccessMessage">
              <ProjectItem
                Name="ST_4437e31a0ed1446fb2de8033b68706ba.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0643DCC6-EEE8-4B0A-9AB8-1A48A6AD54C4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4437e31a0ed1446fb2de8033b68706ba</RootNamespace>
    <AssemblyName>ST_4437e31a0ed1446fb2de8033b68706ba</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\projects\VoidContracts\VoidContracts\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Settings.get_Default():ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Sett" +
    "ings")]

namespace ST_4437e31a0ed1446fb2de8033b68706ba.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[
#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Text;
using Newtonsoft.Json.Linq;
#endregion

namespace ST_4437e31a0ed1446fb2de8033b68706ba
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 

        static ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }
        static System.Reflection.Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            if (args.Name.Contains("Newtonsoft.Json"))
            {
                string paths = @"C:\DataProjects\Data Migration Dave 1.0 to PCRS\Void Contracts PCRS API";
                return System.Reflection.Assembly.LoadFile(System.IO.Path.Combine(paths, "Newtonsoft.Json.dll"));
            }
            return null;

         }

            public void Main()
		{

            System.Net.ServicePointManager.SecurityProtocol = System.Net.SecurityProtocolType.Tls12 | System.Net.SecurityProtocolType.Tls11;
            
            var Json_info = "";
            var resultcontent = "";
            //var contractNumber = "TESTCERT1";
            var Contract = Convert.ToString(Dts.Variables["User::EachContracts"].Value);
            

            try
            {

                using (HttpClient client = new HttpClient())
                {
                   //UAT
                    //var Endpoint = $"https://uat-beta-auto-symt.pcrsdev.com/pcmi.web.sts/token";
                    
                    //Prod
                    var Endpoint = $"https://sym-tech-azure.pcrsauto.com/pcmi.web.sts/token";

                    HttpRequestMessage AccessToken = new HttpRequestMessage(HttpMethod.Post, Endpoint);

                    var pair = new List<KeyValuePair<string, string>>();

                    pair.Add(new KeyValuePair<string, string>("username", "TPAAPI@sym-tech.ca"));
                    
                    //UAT
                    //pair.Add(new KeyValuePair<string, string>("password", "welcome1"));
                    
                    //PROD
                    pair.Add(new KeyValuePair<string, string>("password", "Q:F%/6jvJ6VExCz("));

                    pair.Add(new KeyValuePair<string, string>("grant_type", "password"));
                    pair.Add(new KeyValuePair<string, string>("client_id", "SYMT"));
                    pair.Add(new KeyValuePair<string, string>("client_secret", "12345"));


                    //  HttpResponseMessage response = client.PostAsync(Endpoint, new FormUrlEncodedContent(pair)).Result;

                    HttpContent httpContent = new FormUrlEncodedContent(pair);


                    //  if (httpContent.IsSuccessStatusCode)
                    AccessToken.Content = httpContent;

                    var ResponseMessage = client.SendAsync(AccessToken).Result;
                    var responsecontent = ResponseMessage.Content.ReadAsStringAsync();
                    Json_info = responsecontent.Result; //Get JSON = Response Body 
                    var accessTokenVal = Json_info.Substring(17);
                    var indexOfQoute = accessTokenVal.IndexOf("\"");
                    Json_info = Json_info.Substring(17, indexOfQoute);
            
                    //UAT
                    //var voidapi = $"https://uat-beta-auto-symt.pcrsdev.com/pcmi.web.services/api/v2/contracts/Void";
                    
                    //PROD
                    var voidapi = $"https://sym-tech-azure.pcrsauto.com/pcmi.web.services/api/v2/contracts/Void";

                    client.DefaultRequestHeaders.Add("Authorization", "bearer " + Json_info);
                    client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));
                 

                    //var body = @"{
                    //    " + "\n" +
                    //     @"  ""contracts"": [
                    //    " + "\n" +
                    //     @"    {
                    //    " + "\n" +
                    //     @"      ""contractNumber"": ""TESTCERT1""
                    //    " + "\n" +
                    //     @"    }
                    //    " + "\n" +
                    //     @"  ]
                    //    " + "\n" +
                    //     @"}";

                    GetContract c = new GetContract();
                    c.Contracts = new List<Contract>();
                    c.Contracts.Add(new Contract { ContractNumber = Contract });
         
                    var stringcontractinfo = JsonConvert.SerializeObject(c,Formatting.Indented);
                    // var stringcontractinfo = JsonConvert.SerializeObject(body);

                      var content = new StringContent(stringcontractinfo, Encoding.UTF8, "application/json");                       
                    // // var httpContents = new StringContent(content, Encoding.UTF8, "application/json");


                    var result =client.PostAsync(voidapi, content).Result;

                     //output JSON result            
                    resultcontent = result.Content.ReadAsStringAsync().Result;

                   var obj = JsonConvert.DeserializeObject<JObject>(resultcontent);
                   var successmessage = obj["contracts"][0]["success"].Value<bool>();

                    if(successmessage == true)
                    {
                        Dts.Variables["User::SuccessMessage"].Value = successmessage.ToString();
                    }

              
                    else if (successmessage == false)
                    { 
                        //Extract the error message
                        var message = obj["contracts"][0]["error"]["details"][0]["message"].Value<string>();
                        Dts.Variables["User::OutputMessage"].Value = message;
                        Dts.Variables["User::SuccessMessage"].Value = successmessage.ToString();

                    }
                }

               }
             catch (Exception ex)
             {
                MessageBox.Show(ex.ToString());
                //throw new Exception(ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
             }

            Dts.TaskResult = (int)ScriptResults.Success;
		}


        public class GetContract
{
    public List<Contract> Contracts { get; set; }

}


       public class Contract
{
    public string ContractNumber { get; set; }

}


#region ScriptResults declaration
/// <summary>
/// This enum provides a convenient shorthand within the scope of this class for setting the
/// result of the script.
/// 
/// This code was generated automatically.
/// </summary>
enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4437e31a0ed1446fb2de8033b68706ba</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4437e31a0ed1446fb2de8033b68706ba</msb:DisplayName>
    <msb:ProjectId>{125F53AD-CAE9-476B-8548-8EEB142FF3F4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4437e31a0ed1446fb2de8033b68706ba.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4437e31a0ed1446fb2de8033b68706ba")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4437e31a0ed1446fb2de8033b68706ba")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4437e31a0ed1446fb2de8033b68706ba.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4437e31a0ed1446fb2de8033b68706ba.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4437e31a0ed1446fb2de8033b68706ba.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACXPjmEAAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAgj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADA9AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
PQAAAAAAAEgAAAACAAUAECQAAGgYAAABAAAAAAAAAHg8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF4oEAAAChT+BgIAAAZzEQAACm8SAAAKKqYDbxMAAApyAQAA
cG8UAAAKLBVyIQAAcHKyAABwKBUAAAooFgAACioUKgAAGzAFALMCAAABAAARIAAPAAAoFwAACnLa
AABwCgIoGAAACm8ZAAAKctwAAHBvGgAACm8bAAAKKBwAAAoLcx0AAAoMcgQBAHANKB4AAAoJcx8A
AAoTBHMgAAAKJXJyAQBwcoQBAHBzIQAACm8iAAAKJXKqAQBwcrwBAHBzIQAACm8iAAAKJXLeAQBw
cqoBAHBzIQAACm8iAAAKJXL0AQBwcggCAHBzIQAACm8iAAAKJXISAgBwci4CAHBzIQAACm8iAAAK
cyMAAAoTBREEEQVvJAAACggRBG8lAAAKbyYAAApvJwAACm8oAAAKbykAAAoKBh8RbyoAAApyOgIA
cG8rAAAKEwYGHxERBm8sAAAKCnI+AgBwEwcIby0AAApy1wIAcHLzAgBwBiguAAAKby8AAAoIby0A
AApvMAAACnIDAwBwczEAAApvMgAACnMOAAAGJXMzAAAKbw0AAAYlbwwAAAZzEQAABiUHbxAAAAZv
NAAAChcoNQAACig2AAAKcgMDAHBzNwAAChMICBEHEQhvOAAACm8mAAAKbycAAApvKAAACm8pAAAK
KAEAACsTCREJciUDAHBvOgAAChaMOQAAAW87AAAKcjkDAHBvOwAACigCAAArEwoRCiwmAigYAAAK
bxkAAApySQMAcG8aAAAKEgooPQAACm8+AAAKOIsAAAARCjqEAAAAEQlyJQMAcG86AAAKFow5AAAB
bzsAAApycwMAcG87AAAKcn8DAHBvOwAAChaMOQAAAW87AAAKco8DAHBvOwAACigDAAArEwsCKBgA
AApvGQAACnKfAwBwbxoAAAoRC28+AAAKAigYAAAKbxkAAApySQMAcG8aAAAKEgooPQAACm8+AAAK
3goILAYIbz8AAArc3hlvQAAACihBAAAKJgIoGAAAChdvQgAACt4AAigYAAAKFm9CAAAKKgBBNAAA
AgAAADYAAABLAgAAgQIAAAoAAAAAAAAAAAAAADAAAABdAgAAjQIAABkAAAAXAAABHgIoQwAACioe
AihEAAAKKq5+AQAABC0ecscDAHDQAwAAAihFAAAKb0YAAApzRwAACoABAAAEfgEAAAQqGn4CAAAE
Kh4CgAIAAAQqGn4DAAAEKh4CKEgAAAoqLnMKAAAGgAMAAAQqHgJ7BAAABCoiAgN9BAAABCoeAnsF
AAAEKiICA30FAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAAAHAAAjfgAA
bAcAALQJAAAjU3RyaW5ncwAAAAAgEQAAPAQAACNVUwBcFQAAEAAAACNHVUlEAAAAbBUAAPwCAAAj
QmxvYgAAAAAAAAACAAABVx2iCQkLAAAA+gEzABYAAAEAAABAAAAABwAAAAgAAAARAAAABQAAAEgA
AAACAAAAFgAAAAEAAAAEAAAABQAAAAgAAAAGAAAAAQAAAAcAAAABAAAAAwAAAAMAAAAAAEwFAQAA
AAAABgB1A/AGBgAEBPAGBgDBAt0GDwBkBwAABgDuAgoGBgBYAwoGBgA5AwoGBgDrAwoGBgCVAwoG
BgCuAwoGBgAFAwoGBgAgA58ECgDJA/sECgA4AvsEBgCoCQoGBgDQCJIFBgC5B5IFDgAVCUIGDgBt
AUIGDgBcCUIGDgBOCUIGEgCtCFIGBgAcBpIFBgCJAvAGBgAyAL4ABgCZBZIFBgCkAt0GBgCYBhAH
BgA2BvUFFgB0AjYFFgDVAjYFFgBUAuAFBgDEBZIFBgC8BpIFBgC7BJIFBgDXBGAAFgCoBtcIFgDz
AdcICgAkBfsEGgCmB8sBGgCAAcsBBgB3CZIFDgA+AUIGBgA/AL4ADgA4CUIGBgABAL4ABgAPAM8H
DgBZAUIGDgAzCA8IDgAnCA8IDgAWAA8IDgA2BA8IEgBzCSYGEgDMBCYGBgCWBIgJEgCyBVIGBgA5
AJIFEgAECFIGBgCqBZIFBgCJAZIFHgCZCeYHHgD5COYHBgADApIFBgCVAZIFAAAAAFcAAAAAAAEA
AQABAAAAuQWRADkAAQABAAAAEAAXB3MHQQABAAUAAAEQALAHcweBAAMACQACABAAoQgAAEEABAAM
AAIAEACkCAAAQQAFAA8AAwEAAIwIAABpAAYAEgARAJ4FywERACgCzwERAEkB0wEBACMB1wEBAAMB
3wEGBokA4gFWgGAI5QFWgAgC5QFQIAAAAACRGNYG6QEBAGggAAAAAJEAcATtAQEAlCAAAAAAhgC/
BQYAAwCIIwAAAACGGNAGBgADAJAjAAAAAIMY0AYGAAMAmCMAAAAAkwiUBvUBAwDEIwAAAACTCBAC
+gEDAMsjAAAAAJMIHAL/AQMA0yMAAAAAlgjiCAUCBADaIwAAAACGGNAGBgAEAOIjAAAAAJEY1gbp
AQQA7iMAAAAAhghwCAoCBAD2IwAAAACGCH4IEwIEAJAjAAAAAIYY0AYGAAUA/yMAAAAAhghnBi4A
BQAHJAAAAACGCHoGEAAFAJAjAAAAAIYY0AYGAAYAAAABAI0GAAACAMoHAAABAFYEAAABAFYEAAAB
AFYECQDQBgEAEQDQBgYAGQDQBgoAKQDQBhAAMQDQBhAAOQDQBhAAQQDQBhAASQDQBhAAUQDQBhAA
WQDQBhAAYQDQBhAAaQDQBgYAwQDQBgYA2QDQBgYA+QDQBhUACQHOBRsAEQHQBiEACQFcBCcAiQDC
AS4AGQH7BzIAIQHrATcAeQC5AT0AKQF0BVcAcQBoCF4AOQGiB2QAQQGJBWoASQEiBHEAUQG5BHUA
kQDQBgYAWQF/CXoAmQDQBoAADADQBgYAFADQBpwADAD/AKQAaQHQBqoAmQAsCboAkQDZAMAAHADu
CNYAgQEgCdsAoQDjAOAAJADuCNYAGQHCBPAAGQGOBPUAGQHCBPoAkQBGCAABGQGaCDcAkQH/AAYB
iQFoCQwBoQHQBhAALAD/AKQANADQBgYANAD/AKQAqQG1CCcBuQFOAC8BqQDQBjUBkQD1AD4BqQHF
CEwBsQCJBVgBwQGJBV8B0QFQBGYB2QG5BC4ASQEsBHgB4QFsAgYAgQC5BC4A6QGUCYEBOQEGCQEA
cQDQBgYAgQDQBgYA+QGnAYgB+QGkCZEB4QDQBpYBAQHQBgYACAAcAMEBCAAgAMYBKQB7AGECLgAL
ADkCLgATAEICLgAbAGECLgAjAGoCLgArAJMCLgAzAJMCLgA7AJMCLgBDAGoCLgBLAJkCLgBTAJMC
LgBbALACQwBjAMYBSQB7AGECYQBrAMYBYwBzAMYBgQBrAMYBoQBrAMYBgAFrAMYBoAFrAMYB4AFr
AMYBAAJrAMYBQwADAAEABAADAAUABAAGAAUAAACYBh0CAAAwAiICAADmCCcCAACCCCwCAAB+BjUC
AgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcAAgAMAAkAAQANAAkAAgAPAAsAAQAQAAsAiACUAM0A6QAX
ASABBIAAAAEAAAAyHyptAAAAAAAAkQAAAAQAAAAAAAAAAAAAAJ0BtQAAAAAADwAAAAAAAAAAAAAA
pgHcBAAAAAAEAAAAAAAAAAAAAACvAUIGAAAAAAYAAAAAAAAAAAAAALgBJgYAAAAABAAAAAAAAAAA
AAAAnQGSBQAAAAAPAAAAAAAAAAAAAACmAWoAAAAAAAQAAAAAAAAAAAAAAJ0B5gcAAAAAAAAAAAEA
AAAhBwAABQACAAYAAgAHAAIAcwBTAXkAdAF5AH0BAAAASUVudW1lcmFibGVgMQBUYXNrYDEASHR0
cEhlYWRlclZhbHVlQ29sbGVjdGlvbmAxAExpc3RgMQBJbnQzMgBLZXlWYWx1ZVBhaXJgMgBnZXRf
VVRGOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AU1RfNDQzN2UzMWEwZWQxNDQ2ZmIyZGU4MDMzYjY4NzA2YmEAbXNjb3JsaWIAU3lzdGVt
LkNvbGxlY3Rpb25zLkdlbmVyaWMAU2VuZEFzeW5jAFJlYWRBc1N0cmluZ0FzeW5jAFBvc3RBc3lu
YwBBZGQAPENvbnRyYWN0TnVtYmVyPmtfX0JhY2tpbmdGaWVsZAA8Q29udHJhY3RzPmtfX0JhY2tp
bmdGaWVsZABIdHRwTWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBIdHRwUmVzcG9uc2VNZXNzYWdlAEh0
dHBSZXF1ZXN0TWVzc2FnZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBMb2FkRmlsZQBnZXRfTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAENvbWJpbmUAU2VjdXJpdHlQcm90b2NvbFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUATWVkaWFUeXBlV2l0aFF1YWxpdHlIZWFkZXJWYWx1
ZQB2YWx1ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1cnJlbnREb21haW5fQXNzZW1ibHlSZXNvbHZl
AEluZGV4T2YARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJz
dHJpbmcARm9ybWF0dGluZwBQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTVF80NDM3ZTMxYTBlZDE0NDZmYjJkZTgwMzNiNjg3MDZiYS5k
bGwAc2V0X1NlY3VyaXR5UHJvdG9jb2wAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
Qm9vbGVhbgBKVG9rZW4AU2NyaXB0TWFpbgBBcHBEb21haW4AZ2V0X0N1cnJlbnREb21haW4AU3lz
dGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24A
RXhjZXB0aW9uAE5ld3RvbnNvZnQuSnNvbgBDdWx0dXJlSW5mbwBTeXN0ZW0uTmV0Lkh0dHAATmV3
dG9uc29mdC5Kc29uLkxpbnEAZ2V0X0NvbnRyYWN0TnVtYmVyAHNldF9Db250cmFjdE51bWJlcgBz
ZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAFJlc29sdmVFdmVu
dEhhbmRsZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNDQzN2UzMWEwZWQxNDQ2ZmIyZGU4
MDMzYjY4NzA2YmEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzQ0MzdlMzFhMGVkMTQ0NmZiMmRlODAzM2I2ODcwNmJhLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBSZXNvbHZlRXZlbnRBcmdzAGFyZ3MAU3lzdGVtLlRocmVhZGluZy5UYXNr
cwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBDb250YWlucwBFeHRlbnNpb25zAFN5c3RlbS5OZXQuSHR0
cC5IZWFkZXJzAEh0dHBIZWFkZXJzAEh0dHBSZXF1ZXN0SGVhZGVycwBnZXRfRGVmYXVsdFJlcXVl
c3RIZWFkZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBnZXRfQ29udHJhY3RzAHNldF9Db250cmFjdHMAU2Ny
aXB0UmVzdWx0cwBDb25jYXQAR2V0Q29udHJhY3QASk9iamVjdABTZXJpYWxpemVPYmplY3QARGVz
ZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABnZXRfUmVzdWx0AERpYWxvZ1Jl
c3VsdABzZXRfVGFza1Jlc3VsdABIdHRwQ2xpZW50AGdldF9Db250ZW50AHNldF9Db250ZW50AEZv
cm1VcmxFbmNvZGVkQ29udGVudABTdHJpbmdDb250ZW50AEh0dHBDb250ZW50AGdldF9BY2NlcHQA
SnNvbkNvbnZlcnQAZ2V0X1Bvc3QAU3lzdGVtLlRleHQAU2hvdwBNZXNzYWdlQm94AGdldF9Bc3Nl
bWJseQAAAAAAH04AZQB3AHQAbwBuAHMAbwBmAHQALgBKAHMAbwBuAACAj0MAOgBcAEQAYQB0AGEA
UAByAG8AagBlAGMAdABzAFwARABhAHQAYQAgAE0AaQBnAHIAYQB0AGkAbwBuACAARABhAHYAZQAg
ADEALgAwACAAdABvACAAUABDAFIAUwBcAFYAbwBpAGQAIABDAG8AbgB0AHIAYQBjAHQAcwAgAFAA
QwBSAFMAIABBAFAASQAAJ04AZQB3AHQAbwBuAHMAbwBmAHQALgBKAHMAbwBuAC4AZABsAGwAAAEA
J1UAcwBlAHIAOgA6AEUAYQBjAGgAQwBvAG4AdAByAGEAYwB0AHMAAG1oAHQAdABwAHMAOgAvAC8A
cwB5AG0ALQB0AGUAYwBoAC0AYQB6AHUAcgBlAC4AcABjAHIAcwBhAHUAdABvAC4AYwBvAG0ALwBw
AGMAbQBpAC4AdwBlAGIALgBzAHQAcwAvAHQAbwBrAGUAbgABEXUAcwBlAHIAbgBhAG0AZQAAJVQA
UABBAEEAUABJAEAAcwB5AG0ALQB0AGUAYwBoAC4AYwBhAAERcABhAHMAcwB3AG8AcgBkAAAhUQA6
AEYAJQAvADYAagB2AEoANgBWAEUAeABDAHoAKAAAFWcAcgBhAG4AdABfAHQAeQBwAGUAABNjAGwA
aQBlAG4AdABfAGkAZAAACVMAWQBNAFQAABtjAGwAaQBlAG4AdABfAHMAZQBjAHIAZQB0AAALMQAy
ADMANAA1AAADIgAAgJdoAHQAdABwAHMAOgAvAC8AcwB5AG0ALQB0AGUAYwBoAC0AYQB6AHUAcgBl
AC4AcABjAHIAcwBhAHUAdABvAC4AYwBvAG0ALwBwAGMAbQBpAC4AdwBlAGIALgBzAGUAcgB2AGkA
YwBlAHMALwBhAHAAaQAvAHYAMgAvAGMAbwBuAHQAcgBhAGMAdABzAC8AVgBvAGkAZAABG0EAdQB0
AGgAbwByAGkAegBhAHQAaQBvAG4AAA9iAGUAYQByAGUAcgAgAAAhYQBwAHAAbABpAGMAYQB0AGkA
bwBuAC8AagBzAG8AbgAAE2MAbwBuAHQAcgBhAGMAdABzAAAPcwB1AGMAYwBlAHMAcwAAKVUAcwBl
AHIAOgA6AFMAdQBjAGMAZQBzAHMATQBlAHMAcwBhAGcAZQAAC2UAcgByAG8AcgAAD2QAZQB0AGEA
aQBsAHMAAA9tAGUAcwBzAGEAZwBlAAAnVQBzAGUAcgA6ADoATwB1AHQAcAB1AHQATQBlAHMAcwBh
AGcAZQAAcVMAVABfADQANAAzADcAZQAzADEAYQAwAGUAZAAxADQANAA2AGYAYgAyAGQAZQA4ADAA
MwAzAGIANgA4ADcAMAA2AGIAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAAAA9z+F5wXSt0uasR2bu7DQFwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQEReQUAABKA
hQUgAgEcGAYgAQESgIkDIAAOBCABAg4FAAIODg4FAAESPQ4TBwwODhJJDhJNElEIDhJVElkCDgYA
AQERgJkFIAASgJ0FIAASgKEGIAESgKUcAyAAHAQAAQ4cBQAAEoCtByACARKArQ4LFRJlARURgLEC
Dg4HFRGAsQIODgcgAgETABMBBSABARMADyABARUSgLkBFRGAsQIODgUgAQESUQwgARUSgL0BEoDB
Ek0IFRKAvQESgMEEIAATAAQgABJRCCAAFRKAvQEOBhUSgL0BDgQgAQ4IBCABCA4FIAIOCAgFIAAS
gMUFIAIBDg4KIAAVEoDNARKA0QgVEoDNARKA0QYVEmUBEhgHAAIOHBGA2QUAABKA3QggAwEOEoDd
Dg0gAhUSgL0BEoDBDhJRBhABAR4ADgQKARJZBiABEoDhDgYgARKA4RwNEAEBHgAVEoC5ARKA4QMK
AQIEIAEBHAMKAQ4GAAERgPkOCAABEoD9EYEBBCAAEj0GIAIBDhI9CLd6XFYZNOCJCImEXc2AgMyR
CLA/X38R1Qo6CDCtT+aypq7tBAAAAAAEAQAAAAMGEnEDBhJ1AwYSEAcGFRJlARIYAgYOAgYIAwYR
HAMAAAEHAAISPRwSRQQAABJxBAAAEnUFAAEBEnUEAAASEAggABUSZQESGAkgAQEVEmUBEhgECAAS
cQQIABJ1BAgAEhAIKAAVEmUBEhgDKAAOCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF80NDM3ZTMxYTBlZDE0NDZmYjJkZTgwMzNiNjg3MDZiYQAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAFg9AAAAAAAAAAAAAHI9AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkPQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACptMh8AAAEAKm0yHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANAA0ADMANwBlADMAMQBhADAAZQBkADEANAA0ADYAZgBiADIAZABlADgAMAAzADMAYgA2ADgA
NwAwADYAYgBhAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAOQA4
ADYALgAyADcAOQA0ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
NAA0ADMANwBlADMAMQBhADAAZQBkADEANAA0ADYAZgBiADIAZABlADgAMAAzADMAYgA2ADgANwAw
ADYAYgBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwA0ADQAMwA3AGUAMwAxAGEAMABlAGQAMQA0ADQANgBmAGIAMgBkAGUAOAAwADMAMwBi
ADYAOAA3ADAANgBiAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8ANAA0ADMANwBlADMAMQBhADAAZQBkADEANAA0ADYAZgBiADIAZABlADgAMAAzADMAYgA2
ADgANwAwADYAYgBhAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA3ADkAOAA2AC4AMgA3ADkANAA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA3ADkAOAA2AC4AMgA3ADkANAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIQ9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Void each Contracts\Update isVoid column"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{38520A24-6986-4869-8667-AA469A27EFC0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update isVoid column"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C8E533B4-207F-4879-B88A-1767C1761BAE}"
              SQLTask:SqlStatementSource="UPDATE [dbo].[VoidContracts_APICall]&#xA;SET [IsVoid]=1,&#xA;ErrorMessage=' ',&#xA;ModifiedDate = getdate()&#xA;WHERE [ContractNumber]=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EachContracts"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Void each Contracts.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:Description="Voided"
          DTS:DTSID="{2DCBBEB1-3B77-44B2-8FF5-E09474B3A6F3}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::SuccessMessage]==&quot;True&quot;"
          DTS:From="Package\Void each Contracts\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Void each Contracts\Update isVoid column" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Void each Contracts.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:Description="Can't Void"
          DTS:DTSID="{7BACB133-C54C-450B-A630-9004D80587A1}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::SuccessMessage]==&quot;False&quot;"
          DTS:From="Package\Void each Contracts\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Void each Contracts\Input Error Message" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{43C27523-2A20-480D-8DBF-CE3C3A3C9C28}"
          DTS:ObjectName="{43C27523-2A20-480D-8DBF-CE3C3A3C9C28}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::EachContracts" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0FDCA2B5-5EE4-44CB-8787-C617A286B72F}"
      DTS:From="Package\Get Void Contracts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Void each Contracts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{0558C6A0-055C-436A-9C60-0B9F608F0BFF}"
      DTS:From="Package\Get New Voided Contract List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Void Contracts" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Get New Voided Contract List"
          TopLeft="113,80" />
        <NodeLayout
          Size="167,42"
          Id="Package\Get Void Contracts"
          TopLeft="108,171" />
        <NodeLayout
          Size="178,42"
          Id="Package\Void each Contracts\Input Error Message"
          TopLeft="265,145" />
        <NodeLayout
          Size="134,42"
          Id="Package\Void each Contracts\Script Task"
          TopLeft="171,14" />
        <NodeLayout
          Size="186,42"
          Id="Package\Void each Contracts\Update isVoid column"
          TopLeft="51,144" />
        <EdgeLayout
          Id="Package\Void each Contracts.PrecedenceConstraints[Constraint]"
          TopLeft="217,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73,88"
              Start="0,0"
              End="-73,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8230088495575" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.8230088495575"
                    Point2="0,35.8230088495575"
                    Point3="-4,35.8230088495575" />
                  <mssgle:LineSegment
                    End="-69,35.8230088495575" />
                  <mssgle:CubicBezierSegment
                    Point1="-69,35.8230088495575"
                    Point2="-73,35.8230088495575"
                    Point3="-73,39.8230088495575" />
                  <mssgle:LineSegment
                    End="-73,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.671640625,40.8230088495575,48.34328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Void each Contracts.PrecedenceConstraints[Constraint 1]"
          TopLeft="259,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95,89"
              Start="0,0"
              End="95,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.2300884955752" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.2300884955752"
                    Point2="0,36.2300884955752"
                    Point3="4,36.2300884955752" />
                  <mssgle:LineSegment
                    End="91,36.2300884955752" />
                  <mssgle:CubicBezierSegment
                    Point1="91,36.2300884955752"
                    Point2="95,36.2300884955752"
                    Point3="95,40.2300884955752" />
                  <mssgle:LineSegment
                    End="95,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="16.013359375,41.2300884955752,62.97328125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="448,226"
          Size="448,269"
          Id="Package\Void each Contracts"
          TopLeft="352,50" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="275,188.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77,0"
              Start="0,0"
              End="69.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="69.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="193,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <PrecedenceConstraint
    design-time-name="Package\Void each Contracts.PrecedenceConstraints[Constraint]">
    <ShowAnnotation>ConstraintDescription</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\Void each Contracts.PrecedenceConstraints[Constraint 1]">
    <ShowAnnotation>ConstraintDescription</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>